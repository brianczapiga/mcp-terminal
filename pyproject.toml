[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "terminal-mcp-server"
version = "1.0.1"
description = "A Python MCP (Model Context Protocol) server for macOS Terminal integration"
readme = "README.md"
license = {text = "MIT"}
authors = [
    {name = "Brian Czapiga", email = "brian@czapiga.com"}
]
maintainers = [
    {name = "Brian Czapiga", email = "brian@czapiga.com"}
]
keywords = ["mcp", "terminal", "macos", "ai", "automation", "applescript"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Operating System :: MacOS",
    "Programming Language :: Python :: 3",

    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: System :: Systems Administration",
    "Topic :: Terminals",
]
requires-python = ">=3.10"
dependencies = [
    "fastmcp>=2.0.0",
    "pydantic>=2.0.0",
    "typing-extensions>=4.0.0",
]

[project.optional-dependencies]
dev = [
    "black>=23.0.0",
    "flake8>=6.0.0",
    "pylint>=2.17.0",
    "pytest>=7.0.0",
    "pytest-asyncio>=0.21.0",
    "mypy>=1.0.0",
]

[project.urls]
Homepage = "https://github.com/brianczapiga/mcp-terminal"
Repository = "https://github.com/brianczapiga/mcp-terminal"
Documentation = "https://github.com/brianczapiga/mcp-terminal#readme"
Issues = "https://github.com/brianczapiga/mcp-terminal/issues"
Changelog = "https://github.com/brianczapiga/mcp-terminal/blob/main/CHANGELOG.md"

[project.scripts]
terminal-mcp-server = "terminal_mcp_server:main"

[tool.setuptools.packages.find]
where = ["."]
include = ["*"]
exclude = ["tests*", "docs*", "examples*"]

[tool.black]
line-length = 88
target-version = ['py310']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.pylint.messages_control]
disable = [
    "C0114",  # missing-module-docstring
    "C0115",  # missing-class-docstring
    "C0116",  # missing-function-docstring
    "R0903",  # too-few-public-methods
    "R0913",  # too-many-arguments
    "R0914",  # too-many-locals
    "R0915",  # too-many-statements
    "W0621",  # redefined-outer-name
    "C0301",  # line-too-long
    "C0302",  # too-many-lines
    "E0401",  # import-error (for CI environment)
    "W1203",  # logging-fstring-interpolation
    "W1510",  # subprocess-run-check
    "W0718",  # broad-exception-caught
    "W1309",  # f-string-without-interpolation
    "W0611",  # unused-import
    "W0612",  # unused-variable
    "R1705",  # no-else-return
    "C0415",  # import-outside-toplevel
    "W0212",  # protected-access (for tests)
    "W0201",  # attribute-defined-outside-init (for tests)
    "C0411",  # wrong-import-order
]

[tool.pylint.format]
max-line-length = 88

[tool.pylint.design]
max-args = 10
max-locals = 20
max-statements = 50

[tool.mypy]
python_version = "3.10"
warn_return_any = false
warn_unused_configs = false
disallow_untyped_defs = false
disallow_incomplete_defs = false
check_untyped_defs = false
disallow_untyped_decorators = false
no_implicit_optional = false
warn_redundant_casts = false
warn_unused_ignores = false
warn_no_return = false
warn_unreachable = false
strict_equality = false
ignore_missing_imports = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "--strict-markers",
    "--strict-config",
    "--verbose",
    "--tb=short",
]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
] 